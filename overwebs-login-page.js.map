{"version":3,"sources":["overwebs-login-page.js"],"names":["GluonElement","html","OverwebsLoginPage","template","constructor","loginValid","observedAttributes","attributeChangedCallback","render","loggingIn","getAttribute","setAttribute","removeAttribute","connectedCallback","$","form","addEventListener","console","log","preventDefault","_login","_inputChanged","_anonymous","input","value","validity","valid","dispatchEvent","Event","CustomEvent","detail","anonymous","split","userName","battleTag","loginButton","anonymousButton","customElements","define","is"],"mappings":"AAAA,OAASA,YAAT,CAAuBC,IAAvB,KAAmC,qBAAnC,CACA,MAAO,uCAAP,CACA,MAAO,yDAAP,CACA,MAAO,qCAAP,CAEA,KAAMC,kBAAN,QAAgCF,aAAa,CAC3C,GAAIG,SAAJ,EAAe,CACb,MAAOF,KAAK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;KAiFb,CAEDG,aAAc,CACZ,OADY,CAEZ,KAAKC,UAAL,GACD,CAED,UAAWC,mBAAX,EAAgC,CAC9B,oBACD,CAEDC,2BAA+C,CAChC,YAAT,IADyC,EAE3C,KAAKC,MAAL,EAEH,CAED,GAAIC,UAAJ,EAAgB,CACd,MAA2C,KAApC,QAAKC,YAAL,CAAkB,YAAlB,CACR,CAED,GAAID,UAAJ,GAAqB,GAEjB,KAAKE,YAAL,CAAkB,YAAlB,CAAgC,EAAhC,CAFiB,CAIjB,KAAKC,eAAL,CAAqB,YAArB,CAEH,CAEDC,mBAAoB,CAClB,MAAMA,iBAAN,EADkB,CAElB,KAAKC,CAAL,CAAOC,IAAP,CAAYC,gBAAZ,CAA6B,QAA7B,CAAuC,KAAK,CAC1CC,QAAQC,GAAR,CAAY,QAAZ,CAD0C,CAE1C,EAAEC,cAAF,EAF0C,CAG1C,KAAKC,MAAL,EACD,CAJD,CAFkB,CAQlB,KAAKJ,gBAAL,CAAsB,OAAtB,CAA+B,IAAM,KAAKK,aAAL,EAArC,CACD,CAED,GAAIC,WAAJ,EAAiB,CACf,MAA8B,EAAvB,QAAKR,CAAL,CAAOS,KAAP,CAAaC,KAAb,EAA6B,CAAC,KAAKV,CAAL,CAAOS,KAAP,CAAaE,QAAb,CAAsBC,KAC5D,CAEDN,QAAS,CAEP,GADAH,QAAQC,GAAR,CAAY,MAAZ,CACA,CAAI,KAAKT,SAAT,CACE,KAAKkB,aAAL,CAAmB,GAAIC,MAAJ,CAAU,aAAV,CAAnB,CADF,CAEE,KAAKhB,eAAL,CAAqB,YAArB,CAFF,KAGO,CACL,GAAI,KAAKU,UAAT,CACE,KAAKK,aAAL,CAAmB,GAAIE,YAAJ,CAAgB,OAAhB,CAAyB,CAAEC,OAAQ,CAAEC,YAAF,CAAV,CAAzB,CAAnB,CADF,KAEO,CACL,GAAI,MAAwB,KAAKjB,CAAL,CAAOS,KAAP,CAAaC,KAAb,CAAmBQ,KAAnB,CAAyB,GAAzB,CAA5B,CACA,KAAKL,aAAL,CAAmB,GAAIE,YAAJ,CAAgB,OAAhB,CAAyB,CAAEC,OAAQ,CAAEG,UAAF,CAAsBC,WAAtB,CAAV,CAAzB,CAAnB,CACD,CACD,KAAKvB,YAAL,CAAkB,YAAlB,CAAgC,EAAhC,CACD,CACF,CAEDU,eAAgB,CACV,KAAKC,UADK,EAEZ,KAAKR,CAAL,CAAOqB,WAAP,CAAmBxB,YAAnB,CAAgC,UAAhC,CAA4C,EAA5C,CAFY,CAGZ,KAAKG,CAAL,CAAOsB,eAAP,CAAuBxB,eAAvB,CAAuC,UAAvC,CAHY,GAKZ,KAAKE,CAAL,CAAOqB,WAAP,CAAmBvB,eAAnB,CAAmC,UAAnC,CALY,CAMZ,KAAKE,CAAL,CAAOsB,eAAP,CAAuBzB,YAAvB,CAAoC,UAApC,CAAgD,EAAhD,CANY,CAQf,CAvJ0C,CA0J7C0B,eAAeC,MAAf,CAAsBpC,kBAAkBqC,EAAxC,CAA4CrC,iBAA5C,C","file":"overwebs-login-page.js","sourcesContent":["import { GluonElement, html } from '../gluonjs/gluon.js';\nimport '../overwebs-button/overwebs-button.js';\nimport '../overwebs-loading-spinner/overwebs-loading-spinner.js';\nimport '../overwebs-fonts/overwebs-fonts.js';\n\nclass OverwebsLoginPage extends GluonElement {\n  get template() {\n    return html`\n    <style>\n    :host {\n      display: flex;\n      flex-flow: column;\n      position: fixed;\n      overflow: hidden;\n      width: 100%;\n      min-height: 100%;\n      align-items: center;\n      justify-content: flex-end;\n      letter-spacing: calc(1 / 2560 * var(--overwebs-window-size, 1920px));\n    }\n    #form {\n      width: calc(400 / 2560 * var(--overwebs-window-size, 1920px));\n      display: flex;\n      flex-flow: column;\n      margin-bottom: calc(88 / 2560 * var(--overwebs-window-size, 1920px));\n    }\n    overwebs-loading-spinner {\n      margin-bottom: calc(22 / 2560 * var(--overwebs-window-size, 1920px));\n    }\n    label, .loadingMessage {\n      margin-bottom: calc(14 / 2560 * var(--overwebs-window-size, 1920px));\n      font-family: overwebs-futura;\n      font-size: calc(24 / 2560 * var(--overwebs-window-size, 1920px));\n      color: #FFFFFF;\n      text-align: center;\n      text-transform: uppercase;\n      pointer-events: none;\n    }\n    overwebs-button, input {\n      width: 100%;\n    }\n    #input {\n      height: calc(66 / 2560 * var(--overwebs-window-size, 1920px));\n      margin-bottom: calc(47 / 2560 * var(--overwebs-window-size, 1920px));\n      background: #D1D1D4;\n      border-radius: calc(9 / 2560 * var(--overwebs-window-size, 1920px));\n      border: none;\n      text-align: center;\n      font-family: overwebs-futura;\n      font-size: calc(28 / 2560 * var(--overwebs-window-size, 1920px));\n      transition: background-color linear 0.08s;\n      box-shadow: inset 0 0 calc(1 / 2560 * var(--overwebs-window-size, 1920px)) calc(2 / 2560 * var(--overwebs-window-size, 1920px)) #FFFFFF;\n    }\n    #input:hover, #input:focus {\n      background: #FFFFFF;\n    }\n    #input:focus {\n      outline: none;\n      box-shadow: inset 0 0 calc(1 / 2560 * var(--overwebs-window-size, 1920px)) calc(2 / 2560 * var(--overwebs-window-size, 1920px)) #FFFFFF, 0 0 0 calc(1 / 2560 * var(--overwebs-window-size, 1920px)) #FFFFFF;\n    }\n    #loginButton {\n      margin-bottom: calc(47 / 2560 * var(--overwebs-window-size, 1920px));\n    }\n    :host(:not([logging-in])) .loggingIn, :host([logging-in]) .notLoggingIn {\n      display: none;\n    }\n\n    .loggingIn, .notLoggingIn {\n      display: flex;\n      flex-flow: column;\n      align-items: center;\n    }\n\n    </style>\n    <form id=\"form\" action=\"/main\" method=\"get\">\n      <div class=\"loggingIn\">\n        <overwebs-loading-spinner white size=\"64\"></overwebs-loading-spinner>\n        <div class=\"loadingMessage\">Connecting...</div>\n        <overwebs-button block big bigtext yellow id=\"cancelButton\"><button type=\"submit\">Cancel</button></overwebs-button>\n      </div>\n      <div class=\"notLoggingIn\">\n        <label for=\"input\">Username</label>\n        <input type=\"text\" id=\"input\" pattern=\"^[a-zA-Z]+(#[0-9]+)?$\" autofocus autocomplete=\"off\"></input>\n        <overwebs-button block big bigtext yellow id=\"loginButton\" disabled><button type=\"submit\">Login</button></overwebs-button>\n        <overwebs-button block big bigtext yellow id=\"anonymousButton\"><button type=\"submit\">Anonymous</button></overwebs-button>\n      </div>\n    </form>\n    `;\n  }\n\n  constructor() {\n    super();\n    this.loginValid = false;\n  }\n\n  static get observedAttributes() {\n    return ['logging-in'];\n  }\n\n  attributeChangedCallback(attr, oldVal, newVal) {\n    if (attr === 'logging-in') {\n      this.render();\n    }\n  }\n\n  get loggingIn() {\n    return this.getAttribute('logging-in') !== null;\n  }\n\n  set loggingIn(value) {\n    if (value) {\n      this.setAttribute('logging-in', '');\n    } else {\n      this.removeAttribute('logging-in');\n    }\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    this.$.form.addEventListener('submit', e => {\n      console.log('SUBMIT');\n      e.preventDefault();\n      this._login();\n    });\n\n    this.addEventListener('input', () => this._inputChanged());\n  }\n\n  get _anonymous() {\n    return this.$.input.value === '' || !this.$.input.validity.valid;\n  }\n\n  _login() {\n    console.log('test');\n    if (this.loggingIn) {\n      this.dispatchEvent(new Event('cancelLogin'));\n      this.removeAttribute('logging-in');\n    } else {\n      if (this._anonymous) {\n        this.dispatchEvent(new CustomEvent('login', { detail: { anonymous: true } }));\n      } else {\n        let [userName, battleTag] = this.$.input.value.split('#');\n        this.dispatchEvent(new CustomEvent('login', { detail: { userName: userName, battleTag: battleTag } }));\n      }\n      this.setAttribute('logging-in', '');\n    }\n  }\n\n  _inputChanged() {\n    if (this._anonymous) {\n      this.$.loginButton.setAttribute('disabled', '');\n      this.$.anonymousButton.removeAttribute('disabled');\n    } else {\n      this.$.loginButton.removeAttribute('disabled');\n      this.$.anonymousButton.setAttribute('disabled', '');\n    }\n  }\n}\n\ncustomElements.define(OverwebsLoginPage.is, OverwebsLoginPage);\n"]}